<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--加载数据库信息的配置文件-->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!--配置SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--加载Mybatis的配置文件-->
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"></property>
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--配置mapper扫描器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sys.mapper"></property>
        <!--<property name="sqlSessionTemplateBeanName" value="sqlSessionFactory"></property>-->
    </bean>

    <!--配置service的扫描-->
    <context:component-scan base-package="com.sys.service"></context:component-scan>

    <!--
    事务控制的配置
    对数据库操作Mybatis的事务控制使用spring的jdbc事务管理控制类
    -->
    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--添加对数据源的控制-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--通知-->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!--配置传播行为-->
            <!--配置必须进行事务控制的方法-->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"></tx:method>
            <tx:method name="insert*" propagation="REQUIRED"></tx:method>
            <tx:method name="update*" propagation="REQUIRED"></tx:method>
            <!--配置支持事务的方法-->
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>

    <!--配置aop去调用通知-->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.sys.service.impl.*.*(..))"></aop:advisor>
    </aop:config>
</beans>